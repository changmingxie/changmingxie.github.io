{
  "filename": "custom.md",
  "__html": "<h1 id=\"%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83\">自定义注册中心 <a class=\"header-anchor\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83\">#</a></h1>\n<p>此种方式，为方便开发者按实际需求来开发使用其他注册中心，比如Consul、Eureka等</p>\n<h2 id=\"%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83\">如何自定义注册中心 <a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83\">#</a></h2>\n<p>这里利用了java的spi机制。</p>\n<h3 id=\"%E6%AD%A5%E9%AA%A41%E3%80%81%E5%AE%9E%E7%8E%B0registryprovider\">步骤1、实现RegistryProvider <a class=\"header-anchor\" href=\"#%E6%AD%A5%E9%AA%A41%E3%80%81%E5%AE%9E%E7%8E%B0registryprovider\">#</a></h3>\n<p>对应实现类上添加注解，比如@LoadInfo(name = &quot;xxxx&quot;)<br>\n实现逻辑可参考<strong>NacosRegistryServiceProvider</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.xxxx;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">XxxxRegistryProvider</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">RegistryProvider</span></span>{\n}\n</code></pre>\n<h3 id=\"%E6%AD%A5%E9%AA%A42%E3%80%81%E5%88%9B%E5%BB%BAregistryprovider%E6%96%87%E4%BB%B6\">步骤2、创建RegistryProvider文件 <a class=\"header-anchor\" href=\"#%E6%AD%A5%E9%AA%A42%E3%80%81%E5%88%9B%E5%BB%BAregistryprovider%E6%96%87%E4%BB%B6\">#</a></h3>\n<p>在项目classpath根目录下创建文件夹META-INF/services，<br>\n新建文件org.aggregateframework.discovery.registry.RegistryProvider,<br>\n并在文件内添加实现类的全路径，即com.xxxx.XxxxRegistryProvider。</p>\n<h3 id=\"%E6%AD%A5%E9%AA%A43%E3%80%81%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0\">步骤3、配置实现 <a class=\"header-anchor\" href=\"#%E6%AD%A5%E9%AA%A43%E3%80%81%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0\">#</a></h3>\n<p>让自定义的xxxx注册中心，添加如下配置即可生效。</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">spring.agg.registry.registryType</span>=<span class=\"hljs-string\">custom</span>\n<span class=\"hljs-meta\">spring.agg.registry.customRegistryName</span>=<span class=\"hljs-string\">xxxx</span>\n</code></pre>\n",
  "link": "/zh-cn/aggdocs/tutorial/registry/custom.html",
  "meta": {}
}